<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:camel="http://camel.apache.org/schema/spring" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
		http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">


    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="file:src/test/resources/com.tactix4.t4ADT.properties"/>

    <bean id="hl7codec" class="org.apache.camel.component.hl7.HL7MLLPCodec"/>
    <camel:endpoint id="hl7listener" uri="mina2:tcp://${adt_listen_address}:${adt_listen_port}?sync=true&amp;codec=#hl7codec"/>


    <bean id="adtInRoute" class="com.tactix4.t4ADT.ADTInRoute"/>

    <!--SQL -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://${sql_host}:${sql_port}/${sql_database_name}"/>
        <property name="username" value="${sql_database_username}"/>
        <property name="password" value="${sql_database_password}"/>
    </bean>

    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="messageIdRepo" class="org.apache.camel.component.redis.processor.idempotent.RedisIdempotentRepository" >
        <constructor-arg value="IdempotentRep"/>
    </bean>


    <camel:endpoint id="failMsgHistory" uri="sql:insert into ${fail_msg_store_table} (id, type, hospital_number,visit_id,timestamp, exception, data) values (:#CamelHL7MessageControl,:#CamelHL7TriggerEvent,:#hospitalNoString,:#visitNameString,:#CamelHL7Timestamp,:#exception,:#msgBody)"/>

    <camel:endpoint id="msgHistory" uri="sql:insert into ${msg_store_table} (id, type, hospital_number,visit_id,timestamp, data) values (:#CamelHL7MessageControl,:#CamelHL7TriggerEvent,:#hospitalNoString,:#visitNameString,:#CamelHL7Timestamp,:#msgBody)"/>
    <!---->

    <!--Context-->
    <camel:camelContext id="t4adtContext" managementNamePattern="#name#">
        <camel:routeBuilder ref="adtInRoute"/>
    </camel:camelContext>

    <!--&lt;!&ndash; Jms/ActiveMQ &ndash;&gt;-->
    <!--<bean id="jmsConnectionFactory"-->
          <!--class="org.apache.activemq.ActiveMQConnectionFactory">-->
        <!--<property name="brokerURL" value="vm://myBroker?create=false" />-->
    <!--</bean>-->

    <!--<bean id="pooledConnectionFactory"-->
          <!--class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">-->
        <!--<property name="maxConnections" value="8" />-->
        <!--<property name="connectionFactory" ref="jmsConnectionFactory" />-->
    <!--</bean>-->

    <!--<bean id="jmsConfig"-->
          <!--class="org.apache.camel.component.jms.JmsConfiguration">-->
        <!--<property name="connectionFactory" ref="pooledConnectionFactory"/>-->
        <!--<property name="concurrentConsumers" value="10"/>-->
    <!--</bean>-->

    <camel:endpoint id="activemq-in" uri="direct:in"/>

   <!-- Redis -->
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" />

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"
          p:keySerializer-ref="stringRedisSerializer"
          p:valueSerializer-ref="stringRedisSerializer"
          p:hashKeySerializer-ref="stringRedisSerializer"/>

    <!---->
    <!-- create a Camel ActiveMQ component to use, using the Spring bean style -->
    <!--&lt;!&ndash; we use the vm protocol to communicate intra-jvm which is much faster than tcp &ndash;&gt;-->
    <!--<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">-->
        <!--&lt;!&ndash; vm://myBroker is the vm protocol, and myBroker is the broker name &ndash;&gt;-->
        <!--<property name="configuration" ref="jmsConfig"/>-->
        <!--<property name="brokerURL" value="vm://myBroker?create=true"/>-->
        <!--&lt;!&ndash;<property name="brokerURL" value="tcp://localhost:61616"/>&ndash;&gt;-->
    <!--</bean>-->

    <!--<broker id="broker" brokerName="myBroker" useShutdownHook="false" useJmx="true"-->
            <!--persistent="true" dataDirectory="activemq-data"-->
            <!--xmlns="http://activemq.apache.org/schema/core" >-->
        <!--<persistenceAdapter>-->
            <!--<jdbcPersistenceAdapter dataDirectory="activemq-data"-->
                                    <!--dataSource="#postgres-ds" lockKeepAlivePeriod="0"/>-->
        <!--</persistenceAdapter>-->
        <!--<transportConnectors>-->
            <!--&lt;!&ndash; vm transport for intra-jvm communication &ndash;&gt;-->
            <!--<transportConnector name="vm" uri="vm://myBroker"/>-->
            <!--&lt;!&ndash; tcp for external communication &ndash;&gt;-->
            <!--&lt;!&ndash;<transportConnector name="tcp" uri="tcp://0.0.0.0:61616"/>&ndash;&gt;-->
        <!--</transportConnectors>-->

    <!--</broker>-->



    <bean id="postgres-ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/t4adt"/>
        <property name="username" value="max"/>
        <property name="password" value="max"/>
        <property name="maxActive" value="200"/>
        <property name="poolPreparedStatements" value="true"/>
    </bean>
</beans>
